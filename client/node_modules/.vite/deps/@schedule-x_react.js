import {
  createCalendar
} from "./chunk-GVDHTBAB.js";
import {
  require_react_dom
} from "./chunk-KDCVS43I.js";
import {
  require_jsx_runtime
} from "./chunk-S725DACQ.js";
import {
  require_react
} from "./chunk-RLJ2RCJQ.js";
import {
  __toESM
} from "./chunk-DC5AMYBS.js";

// node_modules/@schedule-x/react/dist/index.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_react = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
var createCustomComponentFn = (setCustomComponent, customComponent) => (wrapperElement, props) => {
  setCustomComponent({
    Component: (0, import_react.createElement)(customComponent, props),
    wrapperElement
  });
};
function ScheduleXCalendar({ calendarApp, customComponents }) {
  const [randomId, setRandomId] = (0, import_react.useState)("");
  const [customComponentsMeta, setCustomComponentsMeta] = (0, import_react.useState)([]);
  const setComponent = (component) => {
    setCustomComponentsMeta((prev) => {
      const newComponents = [...prev];
      const ccid = component.wrapperElement.dataset.ccid;
      const existingComponent = newComponents.find((c) => c.wrapperElement.dataset.ccid === ccid);
      if (existingComponent) {
        newComponents.splice(newComponents.indexOf(existingComponent), 1);
      }
      return [...newComponents, component];
    });
  };
  (0, import_react.useEffect)(() => {
    setRandomId("sx" + Math.random().toString(36).substring(2, 11));
  }, []);
  (0, import_react.useEffect)(() => {
    if (!calendarApp)
      return;
    for (const [componentName, Component] of Object.entries(customComponents || {})) {
      calendarApp._setCustomComponentFn(componentName, createCustomComponentFn(setComponent, Component));
    }
    const calendarElement = document.getElementById(randomId);
    if (!calendarElement)
      return;
    calendarApp.render(calendarElement);
  }, [calendarApp, customComponents, randomId]);
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: (0, import_jsx_runtime.jsxs)(import_react.Fragment, { children: [(0, import_jsx_runtime.jsx)("div", { className: "sx-react-calendar-wrapper", id: randomId }), customComponentsMeta.map(({ Component, wrapperElement }) => {
    return (0, import_react_dom.createPortal)(Component, wrapperElement);
  })] }) });
}
function useCalendarApp(config, plugins) {
  const [calendarApp] = (0, import_react.useState)(() => createCalendar(config, plugins));
  return calendarApp;
}
function useNextCalendarApp(config, plugins) {
  const [calendarApp, setCalendarApp] = (0, import_react.useState)();
  (0, import_react.useEffect)(() => {
    if (typeof window !== "undefined") {
      setCalendarApp(createCalendar(config, plugins));
    }
  }, []);
  return calendarApp;
}
export {
  ScheduleXCalendar,
  useCalendarApp,
  useNextCalendarApp
};
//# sourceMappingURL=@schedule-x_react.js.map
